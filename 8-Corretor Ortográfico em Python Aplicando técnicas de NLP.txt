https://cursos.alura.com.br/formacao-python-data-science
https://cursos.alura.com.br/course/nlp-corretor-ortografico

Construiremos um corretor ortográfico em português utilizando Python e aplicando técnicas de NLP (Processamento de Linguagem Natural)
Tokenizar uma frase -> dividi-la em pequenos pedaços.



1 - EXPLORANDO UM PROJETO DE NLP 
O que é o processamento de linguagem natural (NLP).
O que está por trás de um corretor ortográfico.
Como ler um arquivo de texto utilizando python.
Como contar a quantidade de caracteres de um texto usando len().

2 - UTILIZANDO NLTK PARA TOKENIZAR UM TEXTO
O que são tokens.
O que é e como utilizar a biblioteca NLTK.
Como tokenizar um texto usando NLTK.
Como separa apenas caracteres alfabético de um token.
O que são tipos de palavras.

3 - DESENVOLVENDO E TESTANDO O CORRETOR
Um algoritmo capaz de corrigir palavras com uma letra a menos.
Como implementar este algoritmo.
Como utilizar estatística para selecionar a palavra correta.
Como calcular a distribuição de frequência de das palavras de com corpus textual.

4 - AVALIANDO A QUALIDADE DO CORRETOR
O que é preciso para avaliar um corretor.
Como estruturar os dados de teste para avaliação do corretor.
Calcular a taxa de sucesso do corretor.

5 - INCREMENTANDO O CORRETOR
Um novo algoritmo para melhorar o corretor.
Como criar uma função para deletar caracteres de um palavra incorreta.


6 - CORRIGINDO OS PRINCIPAIS ERROS DE DIGITAÇÃO
Quais são os principais erros de digitação.
Os algoritmos para trocar e inverter letras de uma palavra.

7 - CRIANDO UM CORRETOR TURBINADO
Quais as possíveis fontes de erros em um corretor.
O que é a distância entre uma palavra errada e a palavra correta.
Como transformar os algoritmos desenvolvidos capazes de corrigir palavras com distância igual a 2.
Como otimizar o corretor, selecionando apenas as possíveis palavras corretas.

8 - AVALIANDO E INTERPRETANDO O ERRO DO CORRETOR TURBINADO
Como avaliar o corretor turbinado.
Como interpretar o erro do corretor
